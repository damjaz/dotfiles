#!/bin/bash

. color-scheme

id='/tmp/mpd-ctrl-id'
[[ ! -f $id ]] && echo 0 > $id

notify_current_song() {
  song="$(mpc currentsong)"
  local title='' album='' artist='' file='' msg=''
  
  while read -r line; do
    case "$line" in
      file:*) file="${line#*: }" ;;
      Title:*) title="${line#*: }" ;;
      Album:*) album="${line#*: }" ;;
      Artist:*) artist="${line#*: }" ;;
    esac
  done <<< "$song" # <(mpc currentsong) # alt option
  
  if [[ "$title" ]]; then
    # for unknown reason dunst (pango markup lang) gets fuckd when notify contains '&' sign
    title="${title//&/&amp;}"
    artist="${artist//&/&amp;}"
    album="${album//&/&amp;}"
    printf -v msg $'<span font="Siji 8">\ue271</span>'' <span color="#%s">%s</span>\n   %s\n   %s' "$COL3" "$title" "$artist" "$album"
  else
    file="${file//&/&amp;}"
    printf -v msg "${file//\///\\n}"
    printf -v msg '<span color="#%s">%s</span>\n%s' "$COL1" "No tags" "$msg"
  fi

  dunstify -p -r $(< $id) -u normal " " "$msg" > $id
}

case "$1" in
  toggle)
    state="$(mpc 'status' | grep 'state' | cut -d' ' -f2)"
    case "$state" in
      stop) 
        mpc play
        notify_current_song
        ;;

      pause) 
        mpc pause 0 
        notify_current_song
        ;;

      play) 
        mpc pause 1 
        dunstify -p -r $(< $id) -u low ' ' $'<span font="Siji 8">\ue04d</span> <span color="#'"$COL1"'">playback paused</span>' > $id
        ;;
    esac
    ;;

  next|previous)
    mpc "$1"
    notify_current_song
    ;;

  stop)
    mpc stop
    dunstify -p -r $(< $id) -u low ' ' '<span color="#'"$COL1"'">playback stopped</span>' > $id
    ;;

  nowplaying)
    notify_current_song
    ;;

  *)
    mpc "$*"
    ;;
esac

